{"version":3,"sources":["../../js/src/navbar.js"],"names":["NAME","VERSION","ClassName","OPEN","NAVBAR","LAYOUT","BUTTON","OVERLAY","OVERLAYVISIBLE","Selector","DATA","DATA_SELECTOR","NAVBAR_OPEN","Events","CLICK","Navbar","constructor","element","self","_element","_button","document","querySelector","style","display","_class","getAttribute","_layout","parentNode","classList","add","_overlay","createElement","addEventListener","_toggleNavbar","body","appendChild","navbarEl","toggle","_getElement","navbar","BGNavbar"],"mappings":"AAAA;AACA;;;;;;AAKA,MAAMA,OAAO,QAAb;AACA,MAAMC,UAAU,OAAhB;;AAEA,MAAMC,YAAY;AAChBC,QAAM,QADU;AAEhBC,UAAQ,UAFQ;AAGhBC,UAAQ,cAHQ;AAIhBC,UAAQ,gBAJQ;AAKhBC,WAAS,WALO;AAMhBC,kBAAgB;AANA,CAAlB;;AASA,MAAMC,WAAW;AACfC,QAAM,eADS;AAEfC,iBAAe,aAFA;AAGfC,eAAaV,UAAUE,MAAV,GAAmB;AAHjB,CAAjB;;AAMA,MAAMS,SAAS;AACbC,SAAQ;AADK,CAAf;;AAIA,MAAMC,MAAN,CAAa;;AAEXC,cAAYC,OAAZ,EAAqB;AACnB;AACA,QAAIC,OAAO,IAAX;AACA,SAAKC,QAAL,GAAgBF,OAAhB;;AAEA;AACA,SAAKG,OAAL,GAAeC,SAASC,aAAT,CAAuB,MAAMpB,UAAUI,MAAvC,CAAf;;AAEA;AACA,QAAI,KAAKa,QAAL,IAAiB,IAArB,EAA2B;AACzB,WAAKC,OAAL,CAAaG,KAAb,CAAmBC,OAAnB,GAA6B,MAA7B;AACA,aAAO,KAAP;AACD;;AAED;AACA,SAAKC,MAAL,GAAcR,QAAQS,YAAR,CAAqBjB,SAASE,aAA9B,CAAd;;AAEA;AACA,SAAKgB,OAAL,GAAeV,QAAQW,UAAvB;;AAEA;AACA,SAAKT,QAAL,CAAcU,SAAd,CAAwBC,GAAxB,CAA4B5B,UAAUE,MAAtC;AACA,SAAKuB,OAAL,CAAaE,SAAb,CAAuBC,GAAvB,CAA2B5B,UAAUG,MAAV,GAAkB,GAAlB,GAAuB,KAAKoB,MAAvD;;AAEA,QAAI,KAAKN,QAAL,IAAiB,IAArB,EAA2B;AACzB;AACA,WAAKY,QAAL,GAAgBV,SAASW,aAAT,CAAuB,KAAvB,CAAhB;AACA,WAAKD,QAAL,CAAcF,SAAd,CAAwBC,GAAxB,CAA4B5B,UAAUK,OAAtC;AACA,WAAKwB,QAAL,CAAcE,gBAAd,CAA+BpB,OAAOC,KAAtC,EACE,YAAY;AACRI,aAAKgB,aAAL,CAAmBhB,IAAnB;AACH,OAHH;AAIAG,eAASc,IAAT,CAAcC,WAAd,CAA0B,KAAKL,QAA/B;AACD;;AAED;AACA,QAAI,KAAKX,OAAL,KAAiB,IAArB,EAA2B;AACzB,WAAKA,OAAL,CAAaa,gBAAb,CAA8BpB,OAAOC,KAArC,EACE,YAAY;AACRI,aAAKgB,aAAL,CAAmBhB,IAAnB;AACH,OAHH;AAID;AACF;;AAEDgB,gBAAchB,IAAd,EAAoB;AAChB,QAAImB,WAAWnB,KAAKC,QAApB;AACAD,SAAKa,QAAL,CAAcF,SAAd,CAAwBS,MAAxB,CAA+BpC,UAAUM,cAAzC;AACA6B,aAASR,SAAT,CAAmBS,MAAnB,CAA0BpC,UAAUC,IAApC;AACH;;AAED,SAAOoC,WAAP,GAAqB;AACjB,QAAIC,SAASnB,SAASC,aAAT,CAAuBb,SAASC,IAAhC,CAAb;AACA,WAAO,IAAIK,MAAJ,CAAWyB,MAAX,CAAP;AACH;;AAvDU;;AA2Db,MAAMC,WAAW1B,OAAOwB,WAAP,EAAjB","file":"navbar.js","sourcesContent":["'use strict';\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\nconst NAME = 'navbar'\nconst VERSION = '1.0.0'\n\nconst ClassName = {\n  OPEN: '--open',\n  NAVBAR: '--navbar',\n  LAYOUT: '--has-navbar',\n  BUTTON: '--toggler-menu',\n  OVERLAY: '--overlay',\n  OVERLAYVISIBLE: '--visible'\n}\n\nconst Selector = {\n  DATA: '[data-navbar]',\n  DATA_SELECTOR: 'data-navbar',\n  NAVBAR_OPEN: ClassName.NAVBAR + '.open'\n}\n\nconst Events = {\n  CLICK:  'click'\n}\n\nclass Navbar {\n\n  constructor(element) {\n    // get element\n    var self = this;\n    this._element = element;\n\n    // button to toggle menu\n    this._button = document.querySelector('.' + ClassName.BUTTON);\n\n    // if button doesn't exist in the dom don't display\n    if (this._element == null) {\n      this._button.style.display = 'none';\n      return false;\n    }\n\n    // Element data-navbar attribute value\n    this._class = element.getAttribute(Selector.DATA_SELECTOR);\n\n    // get layout\n    this._layout = element.parentNode;\n\n    // add classes\n    this._element.classList.add(ClassName.NAVBAR);\n    this._layout.classList.add(ClassName.LAYOUT +'-'+ this._class);\n\n    if (this._element != null) {\n      // add overlay\n      this._overlay = document.createElement('div');\n      this._overlay.classList.add(ClassName.OVERLAY);\n      this._overlay.addEventListener(Events.CLICK,\n        function () {\n            self._toggleNavbar(self);\n        });\n      document.body.appendChild(this._overlay);\n    }\n\n    // if an element exist add click EVENT\n    if (this._button !== null) {\n      this._button.addEventListener(Events.CLICK,\n        function () {\n            self._toggleNavbar(self);\n        });\n    }\n  }\n\n  _toggleNavbar(self) {\n      let navbarEl = self._element;\n      self._overlay.classList.toggle(ClassName.OVERLAYVISIBLE);\n      navbarEl.classList.toggle(ClassName.OPEN)\n  }\n\n  static _getElement() {\n      let navbar = document.querySelector(Selector.DATA);\n      return new Navbar(navbar)\n  }\n\n}\n\nconst BGNavbar = Navbar._getElement();\n"]}